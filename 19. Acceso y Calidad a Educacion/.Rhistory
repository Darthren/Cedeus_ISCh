library(rgdal); library(rgeos); library(dplyr)
library(rgdal); library(readxl); library(dplyr); library(RCurl)
setwd("C:/Users/Rodrigo Villegas/Documents/Cedeus_ISCh/Cedeus_ISCh/19. Acceso y Calidad a Educacion/")
ciudades <- read.csv("Otros/Ciudades_Cedeus.csv")
calidad <- read_excel("Raw Data/20150409_SNED_2014_2015.xlsx") %>%
subset(select = c("RBD", "DV_RBD", "NOM_RBD", "COD_COM_RBD","INDICER" ))
calidad$Ciudad <- ciudades[match(calidad[["COD_COM_RBD"]], ciudades[["Codigo"]] ), "Ciudad"]
calidad <- calidad[(!is.na(calidad$Ciudad)),] %>%
group_by(Ciudad) %>%
mutate(breakpoint = quantile(INDICER, .35)[[1]]) %>%
subset(INDICER > breakpoint)
edu <- read.csv("Raw Data/20151007_Directorio_Oficial_EE_2015_20150831_PUBL.csv", sep = ";") %>%
subset(select = c("RBD", "DGV_RBD", "NOM_RBD","COD_COM_RBD","DIR_RBD",
"LATITUD", "LONGITUD","PAGO_MENSUAL"))
edu <- edu[edu$COD_COM_RBD %in% ciudades$Codigo, ]
edu.calidad <- merge(edu, calidad, by.x = c("RBD", "DGV_RBD"), by.y = c("RBD", "DV_RBD"), all = T) %>%
subset(select = c("RBD", "DGV_RBD", "NOM_RBD.x", "COD_COM_RBD.x", "DIR_RBD",
"LONGITUD", "LATITUD", "INDICER",
"PAGO_MENSUAL", "Ciudad")) %>%
subset(!is.na(INDICER) & PAGO_MENSUAL %in% c("GRATUITO", "$1.000 A $10.000", "$10.001 A $25.000") )
edu.calidad$LONGITUD <- as.character(edu.calidad[,"LONGITUD"])
edu.calidad$LONGITUD <- as.numeric(gsub(",", ".", edu.calidad$LONGITUD))
edu.calidad$LATITUD <- as.character(edu.calidad[,"LATITUD"])
edu.calidad$LATITUD <- as.numeric(gsub(",", ".", edu.calidad$LATITUD))
coords <- data.frame(lon = edu.calidad$LONGITUD , lat = edu.calidad$LATITUD)
edu.spatial <- SpatialPointsDataFrame(coords = coords, data = edu.calidad,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
ciudades <- unique(ciudades$Ciudad)
codigos_ciudades <- read.csv("Otros/Ciudades_Cedeus.csv", sep=",")
ciudades <- unique(codigos_ciudades$Ciudad)
walksheds.carpeta <- "GIS/Walksheds (Manzanas)/UnDissolved"
poblacion_manzanas.carpeta <- "GIS/Poblacion Manzanas Ciudades Cedeus"
walksheds.carpeta <- "GIS/Walksheds (Manzanas)/UnDissolved"
accesibilidad.carpeta <- "GIS/Resultados"
tabla_accesibilidad.carpeta <- "Indicadores/"
accesibilidad.tabla <- data.frame()
for (c in seq(ciudades)){
ciudad <- ciudades[c]
# Leer cada shapefie. Cada shapefile sigue un patrón para su nombre. En el caso de áreas verdes,
# se debe modificar el nombre según el tipo de criterio que se utilizó para su análisis (Fuerte, medio, leve).
# Adicionalmente, se asegura que todos los shp estén en la misma projección. En este caso, el shp de areas verdes
# se usan como base.
areas_verdes.shp <- readOGR(areas_verdes.carpeta, paste(ciudad, "_AAVV_(Fuerte)", sep = ""), encoding = "UTF-8")
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8") %>%
spTransform(proj4string(areas_verdes.shp))
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(areas_verdes.shp))
# Los walksheds que tienen contacto con una manzana
manzanas.subset <- poblacion_manzanas.shp[walksheds.shp,]
# Identificar las manzanas con acceso según ID, las que no tienen acceso, y exportar a shp
accesibilidad.shp <- poblacion_manzanas.shp[,c("ID_W", "Pob")]
accesibilidad.shp@data$Acceso <- "Dummy"
accesibilidad.shp@data[accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID,]$Acceso <- "Sí"
accesibilidad.shp@data[!(accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID),]$Acceso <- "No"
writeOGR(as(accesibilidad.shp, "SpatialPolygonsDataFrame" ),
paste(accesibilidad.carpeta, sep = ""),
paste(ciudad, "_Accesibilidad", sep = ""),
driver = "ESRI Shapefile",overwrite_layer=TRUE)
# Calcular la población con acceso y sin acceso
accesibilidad.tabla_tmp <- data.frame("Ciudad" = ciudad,
"Población con Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "Sí"]),
"Población sin Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "No"]),
"Población total" = sum(accesibilidad.shp@data$Pob))
accesibilidad.tabla <- rbind(accesibilidad.tabla, accesibilidad.tabla_tmp)
}
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8")
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
paste(ciudad, "_Walksheds (UnDissolved)", sep = "")
getwd()
list.files("GIS/Walksheds (Manzanas)/UnDissolved/")
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/")
sapply(filez,FUN=function(eachPath){
file.rename(from=eachPath,to=sub(pattern="_10min",replacement= "",eachPath))
})
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/")
filez
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/", pattern = "_10min")
filez
sapply(filez,FUN=function(eachPath){
file.rename(from=eachPath,to=sub(pattern="_10min",replacement= "",eachPath))
})
sapply(filez,FUN=function(eachPath){
file.rename(from=eachPath,to=gsub(pattern="_10min",replacement= "",eachPath))
})
sub(pattern = "_10min", replacement = "", filez[1])
file.rename(from = filez[1], sub(pattern = "_10min", replacement = "", filez[1]))
setwd("GIS/Walksheds (Manzanas)/UnDissolved/")
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/", pattern = "_10min")
filez
sapply(filez,FUN=function(eachPath){
file.rename(from=eachPath,to=gsub(pattern="_10min",replacement= "",eachPath))
})
setwd("GIS/Walksheds (Manzanas)/UnDissolved/")
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/", pattern = "_10min")
filez
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved/")
filez
filez <- list.files("GIS/Walksheds (Manzanas)/UnDissolved")
filez
filez <- list.files()
filez
sapply(filez,FUN=function(eachPath){
file.rename(from=eachPath,to=gsub(pattern="_10min",replacement= "",eachPath))
})
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
paste(ciudad, "_Walksheds (UnDissolved)"
, sep = "")
for (c in seq(ciudades)){
ciudad <- ciudades[c]
# Leer cada shapefie. Cada shapefile sigue un patrón para su nombre. En el caso de áreas verdes,
# se debe modificar el nombre según el tipo de criterio que se utilizó para su análisis (Fuerte, medio, leve).
# Adicionalmente, se asegura que todos los shp estén en la misma projección. En este caso, el shp de areas verdes
# se usan como base.
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8")
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
# Los walksheds que tienen contacto con una manzana
manzanas.subset <- poblacion_manzanas.shp[walksheds.shp,]
# Identificar las manzanas con acceso según ID, las que no tienen acceso, y exportar a shp
accesibilidad.shp <- poblacion_manzanas.shp[,c("ID_W", "Pob")]
accesibilidad.shp@data$Acceso <- "Dummy"
accesibilidad.shp@data[accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID,]$Acceso <- "Sí"
accesibilidad.shp@data[!(accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID),]$Acceso <- "No"
writeOGR(as(accesibilidad.shp, "SpatialPolygonsDataFrame" ),
paste(accesibilidad.carpeta, sep = ""),
paste(ciudad, "_Accesibilidad", sep = ""),
driver = "ESRI Shapefile",overwrite_layer=TRUE)
# Calcular la población con acceso y sin acceso
accesibilidad.tabla_tmp <- data.frame("Ciudad" = ciudad,
"Población con Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "Sí"]),
"Población sin Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "No"]),
"Población total" = sum(accesibilidad.shp@data$Pob))
accesibilidad.tabla <- rbind(accesibilidad.tabla, accesibilidad.tabla_tmp)
}
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8")
setwd(oldwd)
setwd("C:/Users/Rodrigo Villegas/Documents/Cedeus_ISCh/Cedeus_ISCh/19. Acceso y Calidad a Educacion/")
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8")
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
for (c in seq(ciudades)){
ciudad <- ciudades[c]
# Leer cada shapefie. Cada shapefile sigue un patrón para su nombre. En el caso de áreas verdes,
# se debe modificar el nombre según el tipo de criterio que se utilizó para su análisis (Fuerte, medio, leve).
# Adicionalmente, se asegura que todos los shp estén en la misma projección. En este caso, el shp de areas verdes
# se usan como base.
poblacion_manzanas.shp <- readOGR(poblacion_manzanas.carpeta, paste(ciudad, "Poblacion_Manzanas", sep = "_"), encoding = "UTF-8")
walksheds.shp <- readOGR(walksheds.carpeta, paste(ciudad, "_Walksheds (UnDissolved)", sep = ""), encoding = "UTF-8") %>%
spTransform(proj4string(poblacion_manzanas.shp))
# Los walksheds que tienen contacto con una manzana
manzanas.subset <- poblacion_manzanas.shp[walksheds.shp,]
# Identificar las manzanas con acceso según ID, las que no tienen acceso, y exportar a shp
accesibilidad.shp <- poblacion_manzanas.shp[,c("ID_W", "Pob")]
accesibilidad.shp@data$Acceso <- "Dummy"
accesibilidad.shp@data[accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID,]$Acceso <- "Sí"
accesibilidad.shp@data[!(accesibilidad.shp@data$ID_W %in%
manzanas.subset@data$ID),]$Acceso <- "No"
writeOGR(as(accesibilidad.shp, "SpatialPolygonsDataFrame" ),
paste(accesibilidad.carpeta, sep = ""),
paste(ciudad, "_Accesibilidad", sep = ""),
driver = "ESRI Shapefile",overwrite_layer=TRUE)
# Calcular la población con acceso y sin acceso
accesibilidad.tabla_tmp <- data.frame("Ciudad" = ciudad,
"Población con Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "Sí"]),
"Población sin Acceso" = sum(accesibilidad.shp@data$Pob[accesibilidad.shp@data$Acceso == "No"]),
"Población total" = sum(accesibilidad.shp@data$Pob))
accesibilidad.tabla <- rbind(accesibilidad.tabla, accesibilidad.tabla_tmp)
}
accesibilidad.tabla_porcentajes <- accesibilidad.tabla %>%
group_by(Ciudad) %>%
mutate("Población.con.Acceso" = round(Población.con.Acceso/Población.total, 2),
"Población.sin.Acceso" = round(Población.sin.Acceso/Población.total, 2),
"Población.total" = 100)
write.csv(accesibilidad.tabla, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", ciudad, "(Población) (Método B).csv", sep = ""))
write.csv(accesibilidad.tabla_porcentajes, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", ciudad, "(Porcentajes) (Método B).csv", sep = ""))
accesibilidad.tabla_porcentajes
View(accesibilidad.tabla_porcentajes)
accesibilidad.tabla_porcentajes <- accesibilidad.tabla %>%
group_by(Ciudad) %>%
mutate("Población.con.Acceso" = round(Población.con.Acceso/Población.total, 2)*100,
"Población.sin.Acceso" = round(Población.sin.Acceso/Población.total, 2)*100,
"Población.total" = 100)
write.csv(accesibilidad.tabla, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", ciudad, "(Población) (Método B).csv", sep = ""))
tabla_accesibilidad.carpeta
tabla_accesibilidad.carpeta <- ""
write.csv(accesibilidad.tabla, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", ciudad, "(Población) (Método B).csv", sep = ""))
write.csv(accesibilidad.tabla_porcentajes, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", ciudad, "(Porcentajes) (Método B).csv", sep = ""))
write.csv(accesibilidad.tabla, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", "(Población) (Método B).csv", sep = ""))
write.csv(accesibilidad.tabla_porcentajes, paste(tabla_accesibilidad.carpeta,"Accesibilidad ", "(Porcentajes) (Método B).csv", sep = ""))
