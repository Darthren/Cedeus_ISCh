return(dataset)
}
ciudades <- read.csv("Otros/Ciudades_Cedeus.csv")
ciudades <- unique(ciudades$Ciudad)
# Attempt to clean data
setwd("Raw Data/")
files.viajes <- list.files(pattern = "viajes")
files.personas <- list.files(pattern = "personas")
files.modo <- list.files(pattern = "ModoReclass")
total.ciudad <- data.frame()
modo.ciudad <- data.frame()
for (c in seq(files.viajes)){
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
# Almacenar los nombres de las columnas.
column_names <- colnames(tmp.viajes)
if (grepl("Santiago", files.viajes[c])){
# Unificar los factores
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
# El campo $TiempoViaje está en minutos. Multiplicar * 60 para pasar a segundos
# Y convertirlo en tiempo
#tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) ,]
# Tabla de personas
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
# Correcciones de formato a la tabla de personas
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
# Combinar ambos databases
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona"))
# Cuanto tiempo gastan los habitantes de Santiago en transporte al año?
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje*Factor_Viaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*24*3600)))
# Añadir el resultado a la tabla total
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
tmp.summary.Modo <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
modo.ciudad <- rbind(modo.ciudad, tmp.summary.Modo)
} else {
# Estandarizar nombres
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "tiempo", "TiempoViaje") %>%
Corrector.nombre(colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "folio", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "idviaje", "IDViaje") %>%
#        Corrector.nombre(colnames(tmp.viajes), "Factor", "Factor_Viaje", exact.match = T) %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "IDModo"))
# Si los tiempos de viaje están en formato "YMD HMS", corregir
if (nchar(tmp.viajes$TiempoViaje[1]) == 18){
tmp.viajes$TiempoViaje <- strptime(tmp.viajes$TiempoViaje, format = "%d-%m-%Y %H:%M:%S")
tmp.viajes$TiempoViaje <- format(tmp.viajes$TiempoViaje,"%H:%M:%S")
}
# Transformar las unidades de tiempo de char a tiempo
tmp.viajes$TiempoViaje <- chron(times= tmp.viajes$TiempoViaje)
if (class(tmp.viajes$Factor_Viaje) != "numeric"){
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
}
# Corregir nombres, en caso de que no estén bien asignados
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "folio", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona") %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
# Si los factorese están con separación por ",", reemplazar por "."
if (class(tmp.personas$Factor_Persona) != "numeric"){
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
}
# Combinar ambos databases (viajes y personas).
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by = "IDModo")
# Asignar ID unico a personas, para posterior análisis
id.personas <- paste(tmp$IDFolio, tmp$IDPersona, sep = "")
tmp$IDPersona <- id.personas
# Cuanto tiempo al año gastan los habitantes de las otras ciudades en transporte?
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period((sum(TiempoViaje)/sum(Factor_Persona))*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period((sum(TiempoViaje)/sum(Factor_Persona))*24*3600)))
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
tmp.summary.Modo <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
modo.ciudad <- rbind(modo.ciudad, tmp.summary.Modo)
}
}
c
# Script to calculate the total ratio of travel means to work vs total travels to work.
# It uses data from the Encuesta Origen-Destino published by SECTRA (Subsecretaria de Transporte)
# Study cities are Coquimbo, Copiapó, Temuco, Santiago, Concepción and Valdivia.
# Code written by Rodrigo Villegas. E-Mail: rdgo.villegas@gmail.com
# Loading libraries and setting working directory
library(data.table); library(dplyr); library(chron); library(lubridate)
#setwd("E:/Cedeus Sustainability Indicators/Datos/EOD")
setwd("C:/Users/Rodrigo Villegas/Documents/Cedeus_ISCh/Cedeus_ISCh/15. Tiempos de viaje/")
# funciones de ayuda
# Corrector.nombre:
#   Input: nombres de columna, data.frame, variable a buscar (persona, tiempo, etc...)
#          variable a cambiar (IDPersona, TiempoViajes, etc)
#   Output: Dataset con nombre de variable cambiado.
# Nota: Acepta sólo una variable.
Corrector.nombre <- function(dataset, nombres, variable.buscar, variable.cambiar, exact.match = F){
if (exact.match == T){
colname <- grep(paste("^", variable.buscar, "$", sep = ""), nombres, ignore.case = T)
} else {
colname <- grep(variable.buscar, nombres, ignore.case = T)
}
if (colnames(dataset)[colname] != variable.cambiar){
colnames(dataset)[colname] <- variable.cambiar
}
return(dataset)
}
ciudades <- read.csv("Otros/Ciudades_Cedeus.csv")
ciudades <- unique(ciudades$Ciudad)
# Attempt to clean data
setwd("Raw Data/")
files.viajes <- list.files(pattern = "viajes")
files.personas <- list.files(pattern = "personas")
files.modo <- list.files(pattern = "ModoReclass")
total.ciudad <- data.frame()
modo.ciudad <- data.frame()
for (c in seq(files.viajes)){
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
# Almacenar los nombres de las columnas.
column_names <- colnames(tmp.viajes)
if (grepl("Santiago", files.viajes[c])){
# Unificar los factores
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
# El campo $TiempoViaje está en minutos. Multiplicar * 60 para pasar a segundos
# Y convertirlo en tiempo
#tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) ,]
# Tabla de personas
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
# Correcciones de formato a la tabla de personas
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
# Combinar ambos databases
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona"))
# Cuanto tiempo gastan los habitantes de Santiago en transporte al año?
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje*Factor_Viaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*24*3600)))
# Añadir el resultado a la tabla total
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
tmp.summary.Modo <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
modo.ciudad <- rbind(modo.ciudad, tmp.summary.Modo)
} else {
# Estandarizar nombres
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "tiempo", "TiempoViaje") %>%
Corrector.nombre(colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "folio", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "idviaje", "IDViaje") %>%
#        Corrector.nombre(colnames(tmp.viajes), "Factor", "Factor_Viaje", exact.match = T) %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "IDModo"))
# Si los tiempos de viaje están en formato "YMD HMS", corregir
if (nchar(tmp.viajes$TiempoViaje[1]) == 18){
tmp.viajes$TiempoViaje <- strptime(tmp.viajes$TiempoViaje, format = "%d-%m-%Y %H:%M:%S")
tmp.viajes$TiempoViaje <- format(tmp.viajes$TiempoViaje,"%H:%M:%S")
}
# Transformar las unidades de tiempo de char a tiempo
tmp.viajes$TiempoViaje <- chron(times= tmp.viajes$TiempoViaje)
#if (class(tmp.viajes$Factor_Viaje) != "numeric"){
#  tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
#}
# Corregir nombres, en caso de que no estén bien asignados
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "folio", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona") %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
# Si los factorese están con separación por ",", reemplazar por "."
if (class(tmp.personas$Factor_Persona) != "numeric"){
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
}
# Combinar ambos databases (viajes y personas).
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by = "IDModo")
# Asignar ID unico a personas, para posterior análisis
id.personas <- paste(tmp$IDFolio, tmp$IDPersona, sep = "")
tmp$IDPersona <- id.personas
# Cuanto tiempo al año gastan los habitantes de las otras ciudades en transporte?
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period((sum(TiempoViaje)/sum(Factor_Persona))*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period((sum(TiempoViaje)/sum(Factor_Persona))*24*3600)))
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
tmp.summary.Modo <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
modo.ciudad <- rbind(modo.ciudad, tmp.summary.Modo)
}
}
c
modo.ciudad
c <- 3
ciudades <- read.csv("Otros/Ciudades_Cedeus.csv")
ciudades <- unique(ciudades$Ciudad)
setwd("Raw Data/")
files.viajes <- list.files(pattern = "viajes")
files.personas <- list.files(pattern = "personas")
files.modo <- list.files(pattern = "ModoReclass")
total.ciudad <- data.frame()
modo.ciudad <- data.frame()
c
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
test <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
# Almacenar los nombres de las columnas.
column_names <- colnames(tmp.viajes)
if (grepl("Santiago", files.viajes[c])){
# Unificar los factores
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
# El campo $TiempoViaje está en minutos. Multiplicar * 60 para pasar a segundos
# Y convertirlo en tiempo
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
# Tabla de personas
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
# Correcciones de formato a la tabla de personas
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
# Combinar ambos databases
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona"))
# Cuanto tiempo gastan los habitantes de Santiago en transporte al año?
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje*Factor_Viaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*24*3600)))
# Añadir el resultado a la tabla total
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
test <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
modo.ciudad <- rbind(modo.ciudad, tmp.summary.Modo)
}
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
colnames(tmp.viajes)
Factores
Factores
colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "ModoAgregado"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona"))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
c
files.modo[c]
files.viajes <- list.files(pattern = "viajes")
files.personas <- list.files(pattern = "personas")
files.modo <- list.files(pattern = "ModoReclass")
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ",", header = T))
tmp.modo
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
tmp.modo
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "ModoAgregado"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by.x = ModoAgregado, by.y = )
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by.x = "ModoAgregado", by.y = "Modo")
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by.x = "ModoAgregado", by.y = "Modo")
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
Corrector.nombre(colnames(tmp.viajes), "ModoAgregado", "Modo") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "ModoAgregado"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
test <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
Corrector.nombre(colnames(tmp.viajes), "ModoAgregado", "Modo") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "Modo"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by.x = "ModoAgregado", by.y = "Modo")
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje*Factor_Viaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*24*3600)))
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by = "Modo")
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona"))
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
Corrector.nombre(colnames(tmp.viajes), "ModoAgregado", "Modo") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes <- as.data.frame(fread(files.viajes[c], sep = ";", header = T))
tmp.personas <- as.data.frame(fread(files.personas[c], sep = ";", header = T))
tmp.modo <- as.data.frame(fread(files.modo[c], sep = ";", header = T))
nombre.ciudad <- sub( "_.*$", "", files.viajes[c])
column_names <- colnames(tmp.viajes)
Factores <- paste(tmp.viajes$FactorLaboralNormal)
Factores <- as.numeric(gsub(",", ".", Factores))
tmp.viajes$Factores <- Factores
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
Corrector.nombre(colnames(tmp.viajes), "ModoAgregado", "Modo") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
tmp.viajes <- Corrector.nombre(tmp.viajes, colnames(tmp.viajes), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.viajes), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.viajes), "viaje", "IDViaje", exact.match = T) %>%
Corrector.nombre(colnames(tmp.viajes), "LaboralNormal", "Factor_Viaje") %>%
Corrector.nombre(colnames(tmp.viajes), "ModoAgregado", "IDModo") %>%
subset(select = c("IDFolio",  "IDPersona", "IDViaje", "TiempoViaje", "Factor_Viaje", "IDModo"))
tmp.viajes$Factor_Viaje <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.viajes$Factor_Viaje))
tmp.viajes$TiempoViaje <- chron(times = tmp.viajes$TiempoViaje/(24*60))
tmp.viajes <- tmp.viajes[!is.na(tmp.viajes$TiempoViaje) & !is.na(tmp.viajes$Factor_Viaje),]
tmp.personas <- Corrector.nombre(tmp.personas, colnames(tmp.personas), "persona", "IDPersona") %>%
Corrector.nombre(colnames(tmp.personas), "hogar", "IDFolio") %>%
Corrector.nombre(colnames(tmp.personas), "factor", "Factor_Persona", exact.match =T) %>%
subset(select = c("IDFolio", "IDPersona", "Factor_Persona"))
tmp.personas$Factor_Persona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$Factor_Persona))
tmp.personas$IDFolio <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDFolio))
tmp.personas$IDPersona <- as.numeric(gsub(pattern = ",",replacement = ".", x = tmp.personas$IDPersona))
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by = "IDModo")
tmp <- merge(tmp.personas, tmp.viajes, by = c("IDFolio", "IDPersona")) %>%
merge(tmp.modo, by = "IDModo")
tmp.summary.total <- tmp %>%
group_by(IDPersona) %>%
summarise(TiempoViaje = sum(TiempoViaje*Factor_Viaje, na.rm = T),
Factor_Persona = unique(Factor_Persona)) %>%
ungroup() %>%
summarise(Ciudad = nombre.ciudad,
Promedio.Tiempo.viaje.año = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*240*24*3600)),
Promedio.Tiempo.viaje.diario = round(seconds_to_period(weighted.mean(TiempoViaje, Factor_Persona)*24*3600)))
total.ciudad <- rbind(total.ciudad, tmp.summary.total)
test <- tmp %>%
group_by(ModoAgregado) %>%
summarise(Total = sum(TiempoViaje)/length(unique(IDPersona)))
test
tmp.summary.total
